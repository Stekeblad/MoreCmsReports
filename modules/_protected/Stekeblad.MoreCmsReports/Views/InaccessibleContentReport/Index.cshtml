@using Stekeblad.MoreCmsReports.DataModels;

@model InaccessibleContentLocatorData

@{
    Layout = "../Shared/_Layout.cshtml";
    ViewBag.Title = "Inaccessible Content Report";
    EPiServer.Core.ContentReference startPage = EPiServer.Core.ContentReference.StartPage;
    string baseEditLink = EPiServer.Editor.PageEditing.GetEditUrl(startPage);
    string matchThis = ":///" + startPage.ID.ToString();
}

@functions {
    // Help function because new ContentReferense(int) appeared to be slow
    string GetEditLink(int id, string linkBase, string pattern)
    {
        return linkBase.Replace(pattern, ":///" + id.ToString());
    }
}
    <h1 id="top">Inaccessible Content</h1>

    <p>
        The Inaccessible Content report lists pages, blocks, images and other files that does not appear to be accessible
        to site visitors. Never delete anything without trying to verify if it can safetly be deleted as some special case
        implementations on your site may not work with this analysis and no automatic scan is perfect.
    </p>
    <p>
        You can quickly get to edit mode for content by clicking on its name in the lists below. It will be opened in a new tab.
    </p>

    <h2>Types with inaccessible content</h2>

    @if (Model.TypesWithInaccessibleContent.Count == 0)
    {
        <p>Nothing was found, you do a great job managing the content on this site!</p>
    }
    else
    {
        <p>Click on type name to jump to its location in the report</p>
        <ul>
            @foreach (TypeAccessabilityReport typeReport in Model.TypesWithInaccessibleContent)
            {
                <li><a href="#@typeReport.TypeName">@typeReport.TypeName</a> (@typeReport.InaccessibleUsages out of @typeReport.TotalUsages usages inaccessible)</li>
            }
        </ul>

        foreach (TypeAccessabilityReport typeReport in Model.TypesWithInaccessibleContent)
        {
            <h3 id="@typeReport.TypeName">@typeReport.TypeName</h3>

            <ul>
                @foreach (ContentReportItem reportItem in typeReport.Usages)
                {
                    <li><a target="_blank"
                           href="@GetEditLink(reportItem.ContentLinkId, baseEditLink, matchThis)">@reportItem.ContentName</a>
                    </li>
                }
            </ul>
            <a href="#top">Back to page top</a>
        }
    }


    @if (Model.TypesWithNoUsages.Count > 0)
    {
        <h2>Types that is not used at all</h2>
        <p>The following types may be safe to delete by the site developers but could also have some other purpose</p>
        <ul>
            @foreach (TypeAccessabilityReport typeReport in Model.TypesWithNoUsages)
            {
                <li>@typeReport.TypeName</li>
            }
        </ul>
    }

    @if (Model.TypesWithoutIssues.Count > 0)
    {
        <h2>Types that passed</h2>
        <p>This report has no issues to report on for the following types</p>
        <ul>
            @foreach (TypeAccessabilityReport typeReport in Model.TypesWithoutIssues)
            {
                <li>@typeReport.TypeName</li>
            }
        </ul>
    }
